version: '3.8'

# Mostly stolen from https://www.raeffs.dev/blog/self-hosting/2022-11-11-mastodon-with-docker/

services:
  mastodon-redis:
    image: 'redis:alpine'
    command: 'redis-server --save 60 1 --loglevel warning'
    volumes:
      - 'mastodon-redis-volume:/data'
    restart: on-failure
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s

  mastodon-proxy:
    image: 'caddy:latest'
    volumes:
      - 'caddy-data-volume:/data'
      - 'caddy-config-volume:/config'
      - './Caddyfile:/etc/caddy/Caddyfile:ro'
    environment:
      MASTODON_DOMAIN: '${MASTODON_DOMAIN}'
      MASTODON_S3_DOMAIN: '${MASTODON_S3_DOMAIN}'
      MASTODON_S3_BUCKET: '${MASTODON_S3_BUCKET}'
      MASTODON_S3_ENDPOINT: '${MASTODON_S3_ENDPOINT}'
    ports:
      - '80:80'
      - '443:443'
    restart: on-failure
    depends_on:
      mastodon-web:
        condition: service_healthy

  mastodon-web:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    command: 'bash -c "/usr/local/bin/provision.sh; rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"'
    volumes:
      - './provision.sh:/usr/local/bin/provision.sh:ro'
    environment:
      MASTODON_ADMIN_USERNAME: '${MASTODON_ADMIN_USERNAME}'
      MASTODON_ADMIN_EMAIL: '${MASTODON_ADMIN_EMAIL}'
    depends_on:
      mastodon-redis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
      interval: 5s
      timeout: 5s
      retries: 12

  mastodon-sidekiq:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    command: 'bundle exec sidekiq'
    depends_on:
      mastodon-redis:
        condition: service_healthy
      mastodon-web:
        condition: service_healthy
    restart: on-failure

  mastodon-streaming:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    environment:
      NODE_ENV: 'production'
      DB_SSLMODE: 'prefer'
    volumes:
      - './provision-streaming.sh:/usr/local/bin/provision-streaming.sh:ro'
    command: 'bash -c "/usr/local/bin/provision-streaming.sh; node ./streaming"'
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    depends_on:
      mastodon-web:
        condition: service_healthy
    restart: on-failure

  mastodon-search:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.7'
    volumes:
      - 'mastodon-search-volume:/usr/share/elasticsearch/data'
    environment:
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'xpack.license.self_generated.type=basic'
      - 'xpack.security.enabled=false'
      - 'xpack.watcher.enabled=false'
      - 'xpack.graph.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'bootstrap.memory_lock=true'
      - 'cluster.name=mastodon-es'
      - 'discovery.type=single-node'
      - 'thread_pool.write.queue_size=1000'
      - 'ingest.geoip.downloader.enabled=false'
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail localhost:9200/_cluster/health || exit 1']
      interval: 5s
      timeout: 5s
      retries: 6
    restart: on-failure

volumes:
  caddy-data-volume:
    external: true
  caddy-config-volume:
    external: true
  mastodon-search-volume:
    external: true
  mastodon-redis-volume:
    external: true

